on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Gradle Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle Wrapper Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-

      - name: Set Up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
        
      - name: Unit tests
        run: bash ./gradlew test --stacktrace

      - name: Upload Test HTML Result
        if: failure() || success()
        uses: actions/upload-artifact@v1
        with:
          name: test-result
          path: app/build/reports/tests/testReleaseUnitTest/

  build-and-release:
    runs-on: [ubuntu-latest]
    needs: [test]
    name: Build and release
    steps: 
      - uses: actions/checkout@v1

      - name: Gradle Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle Wrapper Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      
      - name: Set Up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Get The Version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        
      - name: Build Release APK
        run: bash ./gradlew assembleRelease --stacktrace
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            TODO: Add changes
          draft: false
          prerelease: false

      - name: Sign APK
        id: sign-apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEYSTORE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload Release APK
        id: upload-release-apk
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.sign-apk.outputs.signedReleaseFile }}
          asset_name: chekers-release-${{ steps.get_version.outputs.VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive
          
